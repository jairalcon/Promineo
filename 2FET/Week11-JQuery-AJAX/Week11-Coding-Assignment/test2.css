/* using asterisk selector for entire page */
/* setting font for entire page */
* {
    padding: 0;
    margin: 0;
    font-family: 'Itim';
}

*, *::after, *::before {
    box-sizing: border-box;
}

:root {
    --box-size: 100px;
    --mark-size: calc(var(--box-size) * .9);
}


/* setting color of background to cover whole page */
.background {
    background-color: #12181B;
    height: 100vh;
    padding-top: 1px;
}

/*   */
.title {
    color: white;
    text-align: center;
    font-size: 40px;
    margin-top: 10%;
}

/*  */
.display {
    color: white;
    font-size: 25px;
    text-align: center;
    margin-top: 1em;
    margin-bottom: 1em;
}

/* hide any UI elements by applying to given element */
.hide {
    display: none;
}

/* using CSS grid system to create game board */
.container {
    margin: 0 auto;
    display: grid;
    grid-template-columns: 33% 33% 33%;
    grid-template-rows: 33% 33% 33%;
    max-width: 300px;
}

.tile {
    border: 1px solid white;
    width: var(--box-size);
    height: var(--box-size);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 50px;
    cursor: pointer;
    /*  */
    position: relative;
}

/* Removing borders from grid */
.tile:first-child,
.tile:nth-child(2),
.tile:nth-child(3) {
    border-top: none;
}

.tile:nth-child(3n + 1) {
    border-left: none;
}

.tile:nth-child(3n + 3) {
    border-right: none;
}

.tile:last-child,
.tile:nth-child(8),
.tile:nth-child(7) {
    border-bottom: none;
}
/* end of removing borders from grid */


/* color for player X's mark */
.playerX {
    color: #09c372;
}

/* color for player O's mark */
.playerO {
    color: #498afb;
}

/*  */
.controls {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    margin-top: 1em;
}

/*  */
#reset {
    background-color: #ff3860;
    color: white;
    padding: 8px;
    border-radius: 8px;
    border: none;
    font-size: 20px;
    margin-left: 1em;
    cursor: pointer;
}




/* ! */



.tile.x,
.tile.circle {
    cursor: not-allowed;
}


.tile.x::before,
.tile.x::after,
.tile.circle::before {
    background-color: white;
}


.container.x .tile:not(.x):not(.circle):hover::before,
.container.x .tile:not(.x):not(.circle):hover::after,
.container.circle .tile:not(.x):not(.circle):hover::before {
    background-color: lightgrey;
}


.tile.x::before,
.tile.x::after,
.container.x .tile:not(.x):not(.circle):hover::before,
.container.x .tile:not(.x):not(.circle):hover::after {
    content: '';
    position: absolute;
    width: calc(var(--mark-size) * .15);
    height: var(--mark-size);
}


.tile.x::before,
.container.x .tile:not(.x):not(.circle):hover::before {
    transform: rotate(45deg);
}


.tile.x::after,
.container.x .tile:not(.x):not(.circle):hover::after {
    transform: rotate(-45deg);
}


.tile.circle::before,
.tile.circle::after,
.container.circle .tile:not(.x):not(.circle):hover::before,
.container.circle .tile:not(.x):not(.circle):hover::after {
    content: '';
    position: absolute;
    border-radius: 50%;
}


.tile.circle::before,
.container.circle .tile:not(.x):not(.circle):hover::before {
    width: var(--mark-size);
    height: var(--mark-size);
}


.tile.circle::after,
.container.circle .tile:not(.x):not(.circle):hover::after {
    width: calc(var(--mark-size) * .7);
    height: calc(var(--mark-size) * .7);
    background-color: white;
}


/* Adding an animation to the button Play Again when hovered */
.btn:hover {
    transform: translateY(-2px);
    cursor: pointer;
}

.winning-message.show {
    display: flex;
}

.display-player {
    font-size: 3rem;
    font-family: "Heebo", sans-serif;
}